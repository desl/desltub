/*
  Blink

  Turns an LED on for one second, then off for one second, repeatedly.

  Most Arduinos have an on-board LED you can control. On the UNO, MEGA and ZERO
  it is attached to digital pin 13, on MKR1000 on pin 6. LED_BUILTIN is set to
  the correct LED pin independent of which board is used.
  If you want to know what pin the on-board LED is connected to on your Arduino
  model, check the Technical Specs of your board at:
  https://www.arduino.cc/en/Main/Products
*/

int HEATER = 52;    // Heater i/o Pin 
int PUMP = 51;      // Pump i/o Pin
float TEMP_SWING = 1;  // Swing in any direction
float TARGET_TEMP = 95; // Target temperature of the hot tub.
float CURRENT_TEMP = 65; // Current tub temperature.
bool PUMP_DESIRED = false;  // Do the users want the pump (jets) on?

float SERIES_RESISTOR = 100000;
// THERMISTORPIN = A0;
float THERMISTOR_RES = 30000;

// the setup function runs once when you press reset or power the board
void setup() {
  // initialize digital pin LED_BUILTIN as an output.
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(HEATER, OUTPUT);
  pinMode(PUMP, OUTPUT);
  analogReference(DEFAULT);
  Serial.begin(9600);
  Serial.print("\n*******\nArduino Initialized!\n\n");
}

float sense_temp(){
  Serial.print("Temperature sensed: "); Serial.println(CURRENT_TEMP);
  float reading;
  float thermistor_temp;
  reading = analogRead(0);
  Serial.print("reading: ");
  Serial.print(reading);
  Serial.print("\n");
  // convert value to resistance
  reading = (1023/ reading) - 1;
  reading = SERIES_RESISTOR / reading;
  Serial.print("Thermistor Resistance: ");
  Serial.print(reading);
  
  thermistor_temp = (77 * reading ) / THERMISTOR_RES;
  
  Serial.print(" Temp: ");
  Serial.print(thermistor_temp);
  Serial.print("\n");
  return CURRENT_TEMP;
}

void heater_on(){
  if ( digitalRead(HEATER) == LOW){
    pump_on();
    Serial.println("Heater On");
    temp_log();
    //digitalWrite(HEATER, !digitalRead(HEATER));
    digitalWrite(HEATER, HIGH);
  }
}

void heater_off(){
  if (digitalRead(PUMP) == HIGH){
    digitalWrite(HEATER, LOW);
    Serial.println("Heater Off");
    temp_log();
    if (PUMP_DESIRED == false){
      pump_off();
    }
  }
}

void pump_on(){
  if ( digitalRead(PUMP) == LOW){
    Serial.println("Pump On");
    digitalWrite(PUMP, HIGH);
  }
}

void pump_off(){
  Serial.println("Pump Off");
  digitalWrite(PUMP, LOW);
}

void temp_log(){
  Serial.print("Temp is "); Serial.print(CURRENT_TEMP); 
  Serial.print(". Target: "); Serial.print(TARGET_TEMP);
  Serial.print(". Swing allowed: "); Serial.print(TEMP_SWING);
  Serial.print(".\n");
}

void temp_simulate(){
  if (digitalRead(HEATER) == HIGH){
    CURRENT_TEMP+=2;
  }else{
    CURRENT_TEMP-=1;
  }
}

// the loop function runs over and over again forever
void loop() {
  int SENSED_TEMP = sense_temp();
  
  if (SENSED_TEMP < TARGET_TEMP - TEMP_SWING){
    heater_on();
  }
  
  if (SENSED_TEMP > TARGET_TEMP + TEMP_SWING){
    heater_off();
  }
  
  delay(5000);      // wait for 10s second
  temp_simulate();
}
